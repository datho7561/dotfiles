# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

## Path

if ! [[ "$PATH" =~ "$HOME/.local/bin" ]]
then
	PATH="$HOME/.local/bin:$PATH"
fi
if ! [[ "$PATH" =~ "$HOME/bin" ]]
then
	PATH="$HOME/bin:$PATH"
fi
if ! [[ "$PATH" =~ "$HOME/go/bin" ]]
then
	PATH="$HOME/go/bin:$PATH"
fi
if ! [[ "$PATH" =~ "$HOME/.npm-global/bin" ]]
then
	PATH="$HOME/.npm-global/bin:$PATH"
fi
if ! [[ "$PATH" =~ "$HOME/.deno/bin" ]]
then
	PATH="$HOME/.deno/bin:$PATH"
fi
export PATH

## Prompt

if which starship > /dev/null
then
	eval "$(starship init bash)"
fi

## Aliases

alias ls='TERM=xterm ls --color=auto'
alias l='ls'
alias ll='ls -lah'
alias g='git'
alias open='xdg-open'
alias edit='$EDITOR'
alias podrun='podman run --rm -it'

{{ if (eq .chezmoi.username "dthompson") -}}
alias theia='podman run --rm -p 3000:3000 theiaide/theia'
alias minishit='minishift'
alias graal='sdk use java 20.2.0.r11-grl'
alias lsp4jclean='rm -rf /home/dthompson/.m2/repository/org/eclipse/lsp4j'
{{- end }}

## Functions

weather()
{
	curl wttr.in
}

giffy()
{
	ffmpeg -i $1 -vf "fps=10" -c:v pam -f image2pipe - | convert -delay 10 - -loop 0 -layers optimize $2
}

lock()
{
	swaylock & systemctl suspend
}

npmi()
{
	npm i && npm audit --production
}

{{ if (eq .chezmoi.username "dthompson") -}}
#  dev xml
bx()
{
	pushd ~/Documents/vscode-xml
	npm run build-server
	popd
}
bxn()
{
	graal
	pushd ~/Documents/lemminx
	./mvnw clean package -Dnative -DskipTests
	cp ~/Documents/lemminx/org.eclipse.lemminx/target/lemminx-linux* ~/Documents/vscode-xml/server/lemminx-linux
	chmod u+x ~/Documents/vscode-xml/server/lemminx-linux
	popd
}
tx()
{
	pushd ~/Documents/lemminx
	./mvnw verify
	popd
}
cocxml()
{
	pushd ~/Documents/lemminx
	./mvnw clean package -DskipTests
	cp ~/Documents/lemminx/org.eclipse.lemminx/target/org.eclipse.lemminx-*uber.jar ~/.config/coc/extensions/coc-xml-data/org.eclipse.lemminx-SNAPSHOT-uber.jar
	popd
}
xmlbin()
{
	cp ~/Documents/lemminx/org.eclipse.lemminx/target/lemminx-linux* ~/bin/lemminx
	chmod ugo+x ~/bin/lemminx
}
bs()
{
	pushd ~/Documents/lemminx-schematron
	./mvnw clean package -DskipTests
	cp ~/Documents/lemminx-schematron/target/lemminx-schematron-*-SNAPSHOT.jar ~/Documents/lemminx-extensions
	popd
}
ts()
{
	pushd ~/Documents/lemminx-schematron
	./mvnw clean verify
	popd
}

#  dev lemminx-maven
bv()
{
	pushd ~/Documents/lemminx-maven/lemminx-maven
	../mvnw clean package
	rm -f ~/Documents/lemminx-extensions/lemminx-maven/*.jar
	rm -f ~/Documents/lemminx-extensions/lemminx-maven/*.zip
	cp ~/Documents/lemminx-maven/lemminx-maven/target/lemminx-maven-*-SNAPSHOT-zip-with-dependencies.zip ~/Documents/lemminx-extensions/lemminx-maven
	popd
	pushd ~/Documents/lemminx-extensions/lemminx-maven
	unzip *.zip
	popd
}

#  dev quarkus
bq()
{
	pushd ~/Documents/vscode-quarkus
	npm run build
	popd
}
tq()
{
	pushd ~/Documents/quarkus-ls/quarkus.ls.ext/com.redhat.quarkus.ls
	./mvnw clean verify
	popd
	pushd ~/Documents/quarkus-ls/quarkus.jdt.ext
	./mvnw clean verify
	popd
}

#  dev microprofile
bm()
{
	pushd ~/Documents/vscode-microprofile
	npm run build-server
	npm run build-ext
	popd
}
tm()
{
	pushd ~/Documents/lsp4mp/microprofile.ls/org.eclipse.lsp4mp.ls
	./mvnw test
	popd
}
im()
{
	pushd ~/Documents/lsp4mp/microprofile.jdt
	./mvnw clean verify
	popd
}
versace()
{
	pushd ~/Documents/vscode-microprofile
	code --uninstall-extension redhat.vscode-quarkus
	code --uninstall-extension redhat.vscode-microprofile
	rm -f *.vsix
	vsce package
	code --install-extension *.vsix
	popd
}
{{- end }}

## Environment

# Use the base 16 terminal colors for ls
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43'
export TERM=xterm-256color # Needed to get vim to work in alacritty
export EDITOR=vim

{{ if (eq .chezmoi.username "dthompson") -}}
export GRAALVM_HOME='/home/dthompson/.sdkman/candidates/java/20.3.1.2-mandrel'
{{- end }}

export DENO_INSTALL="/home/david/.deno"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/{{ .chezmoi.username }}/.sdkman"
[[ -s "/home/{{ .chezmoi.username }}/.sdkman/bin/sdkman-init.sh" ]] && source "/home/{{ .chezmoi.username }}/.sdkman/bin/sdkman-init.sh"
source "$HOME/.cargo/env"
